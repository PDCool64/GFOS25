import{a7 as u}from"./index-BoGljDLN.js";import{a as i,u as f}from"./token--ulPFVqS.js";import{a as c,p as r,b as g,g as n}from"./request-CTPT2BVh.js";const o=i();f();const p=u("aufgaben",{state:()=>({aufgaben:{}}),getters:{active(){return Object.values(this.aufgaben).filter(t=>new Date(t.faelligkeitsdatum)>new Date)},stats(){let t={total:0,done:0,in_progress:0,undone:0};for(const a in this.aufgaben){const e=this.aufgaben[a];e!==void 0&&(t.total++,e.status%3==0?t.undone++:e.status%3==1?t.in_progress++:t.done++)}return t},activeStats(){let t={total:0,done:0,in_progress:0,undone:0};for(const a of this.active)t.total++,a.status%3==0?t.undone++:a.status%3==1?t.in_progress++:t.done++;return t},perMonth(t,a){counter=0;for(const e in this.aufgaben)e.month==t&&e.status==a&&counter++;return counter}},actions:{async fetchAufgaben(){var e;if(((e=o.account)==null?void 0:e.id)==null)return;const t=await n("/accounts/aufgaben/"+o.account.id);if(!t.ok)throw new Error("HTTP error, status = "+t.status);const a=await t.json();for(const s of a)this.aufgaben[s.aufgabe.id]=s.aufgabe},async fetchAllAufgaben(){const t=await n("/aufgaben/all");if(!t.ok)throw new Error("HTTP error, status = "+t.status);const a=await t.json();for(const e of a)this.aufgaben[e.id]=e},async fetchAufgabe(t){const a=await n("/aufgaben/"+t);if(!a.ok)throw new Error("HTTP error, status = "+a.status);const e=await a.json();this.aufgaben[e.id.toString()]=e},async createAufgabe(t){this.aufgaben[t.id]=t;const a=await r("/aufgaben",t);if(!a.ok)throw new Error("HTTP error, status = "+a.status);const s=(await a.json()).id;await g(`/aufgaben/${s}/add-account/`+o.account.id)},async createAufgabenpunkt(t){const a=await r("/aufgaben/punkte",t);if(!a.ok)throw new Error("HTTP error, status = "+a.status);await a.json()},async togglePunkt(t){const a=await c("/aufgaben/punkte/"+t+"/toggle");if(!a.ok)throw new Error("HTTP error, status = "+a.status);const e=await a.json();this.aufgaben[t]=e}}});export{p as u};
